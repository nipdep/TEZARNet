{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1uMRAwCY2j2Iurzl4LgoEPMVgVVSVHVsj","timestamp":1678630949951},{"file_id":"https://github.com/shankygupta79/GoogleCollabFiles/blob/master/Word2Vec.ipynb","timestamp":1666290267806}],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"HDjdWIER5Whn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679025809798,"user_tz":-330,"elapsed":14616,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"4e0c0342-9a8e-4136-89da-e74b6c0a2ea0"},"source":["import gensim\n","from gensim.models import word2vec\n","from gensim.models import KeyedVectors\n","from sklearn.metrics.pairwise import cosine_similarity\n","import numpy as np\n","import spacy\n","import pickle"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/torch/cuda/__init__.py:497: UserWarning: Can't initialize NVML\n","  warnings.warn(\"Can't initialize NVML\")\n"]}]},{"cell_type":"code","source":["import gensim.downloader\n","print(list(gensim.downloader.info()['models'].keys()))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sGJGciJQp91A","executionInfo":{"status":"ok","timestamp":1679025809799,"user_tz":-330,"elapsed":5,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"4f2c5cea-5efd-4c20-8698-356433708fef"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["['fasttext-wiki-news-subwords-300', 'conceptnet-numberbatch-17-06-300', 'word2vec-ruscorpora-300', 'word2vec-google-news-300', 'glove-wiki-gigaword-50', 'glove-wiki-gigaword-100', 'glove-wiki-gigaword-200', 'glove-wiki-gigaword-300', 'glove-twitter-25', 'glove-twitter-50', 'glove-twitter-100', 'glove-twitter-200', '__testing_word2vec-matrix-synopsis']\n"]}]},{"cell_type":"code","source":["class_list = ['lying',\n","            'sitting',\n","            'standing',\n","            'walking',\n","            'running',\n","            'cycling',\n","            'fitness walking',\n","            'watching television',\n","            'computer work',\n","            'car driving',\n","            'ascending stairs',\n","            'descending stairs',\n","            'vacuum cleaning',\n","            'ironing',\n","            'folding laundry',\n","            'house cleaning',\n","            'playing soccer',\n","            'rope jumping']"],"metadata":{"id":"S1qAHFeHqT3D","executionInfo":{"status":"ok","timestamp":1679025809799,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["---\n","Glove-wiki-gigaword-50 Model"],"metadata":{"id":"g6-lUbApqE-w"}},{"cell_type":"code","source":["glove_vectors = gensim.downloader.load('word2vec-google-news-300')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"osLoAyfPqL-4","executionInfo":{"status":"ok","timestamp":1679026379439,"user_tz":-330,"elapsed":532734,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"d92aedb3-0f9a-4315-c79e-032972e87329"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[==================================================] 100.0% 1662.8/1662.8MB downloaded\n"]}]},{"cell_type":"code","source":["# check word existance \n","word_list = ['lying',\n","            'sitting',\n","            'standing',\n","            'walking',\n","            'running',\n","            'cycling',\n","            'hiking',\n","            'watching',\n","            'working',\n","            'driving',\n","            'upstairs',\n","            'downstairs',\n","            'cleaning',\n","            'ironing',\n","            'laundering',\n","            'cleaning',\n","            'playing',\n","            'jumping']\n","\n","for w in word_list:\n","  try:\n","    glove_vectors[w]\n","  except:\n","    print(w)"],"metadata":{"id":"K6QBVXAVqL8F","executionInfo":{"status":"ok","timestamp":1679026379440,"user_tz":-330,"elapsed":6,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["vecs = [glove_vectors[w] for w in word_list]"],"metadata":{"id":"vAi35CUAqL4L","executionInfo":{"status":"ok","timestamp":1679026379440,"user_tz":-330,"elapsed":4,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["with open('./glove_featureV2.npy', 'wb') as pf:\n","  np.save(pf, vecs)"],"metadata":{"id":"P3re4DKkuCfW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["---\n","word2vec-google-news-300"],"metadata":{"id":"fku6GdASudi8"}},{"cell_type":"code","source":["w2v_vectors = gensim.downloader.load('word2vec-google-news-300')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G0Of3Qy3umQD","executionInfo":{"status":"ok","timestamp":1678635616351,"user_tz":-330,"elapsed":162358,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"2669a0bd-c81c-4bd9-a1b8-f1dd46456908"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[==================================================] 100.0% 376.1/376.1MB downloaded\n"]}]},{"cell_type":"code","source":["w2v_vectors = glove_vectors"],"metadata":{"id":"fBQqSPpjxVDm","executionInfo":{"status":"ok","timestamp":1679026396209,"user_tz":-330,"elapsed":676,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# check word existance \n","word_list = ['lying',\n","            'sitting',\n","            'standing',\n","            'walking',\n","            'running',\n","            'cycling',\n","            'hiking',\n","            'watching',\n","            'working',\n","            'driving',\n","            'upstairs',\n","            'downstairs',\n","            'cleaning',\n","            'ironing',\n","            'laundering',\n","            'cleaning',\n","            'playing',\n","            'jumping']\n","\n","for w in word_list:\n","  try:\n","    w2v_vectors[w]\n","  except:\n","    print(w)"],"metadata":{"id":"YoHl2SV4umNh","executionInfo":{"status":"ok","timestamp":1679026396698,"user_tz":-330,"elapsed":2,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["vecs = [w2v_vectors[w] for w in word_list]\n","word_emb_dict = dict(zip(word_list, vecs))"],"metadata":{"id":"thh6fGUARzhK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["word_emb = []\n","for w in class_list:\n","    # print(w.split())\n","    cmp_emb = np.array([w2v_vectors[i] for i in w.split()]).mean(axis=0)\n","    # print(cmp_emb.shape)\n","    word_emb.append(cmp_emb)\n"],"metadata":{"id":"yH6ABGc8TP4s","executionInfo":{"status":"ok","timestamp":1679026415770,"user_tz":-330,"elapsed":404,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["np.array(word_emb).shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mHu-f3csUKlp","executionInfo":{"status":"ok","timestamp":1679026416213,"user_tz":-330,"elapsed":2,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"5dd751d8-facd-4e11-b64d-69ca53679832"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(18, 300)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["word_dict = dict(zip(class_list, word_emb))"],"metadata":{"id":"qFzboppTUpN8","executionInfo":{"status":"ok","timestamp":1679026422523,"user_tz":-330,"elapsed":677,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["with open('GloVe_GNEWS_300.pickle', 'wb') as handle:\n","    pickle.dump(word_dict, handle)"],"metadata":{"id":"KWHczWc0Vn3L","executionInfo":{"status":"ok","timestamp":1679026444980,"user_tz":-330,"elapsed":420,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["with open('./word2vec_featureV2.npy', 'wb') as pf:\n","  np.save(pf, vecs)"],"metadata":{"id":"t9RByRmxu_ph"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["---\n","GloVe"],"metadata":{"id":"9LLc7JGavB8V"}},{"cell_type":"code","source":["nlp = spacy.load(\"en_core_web_sm\")"],"metadata":{"id":"nIFhMzsBPjAp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["nlp('coconut').vector.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"biOzzHIaXVUw","executionInfo":{"status":"ok","timestamp":1678633903198,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"140f5d6d-854b-4491-fdf6-dc2a7c61806b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(96,)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["word_emb = []\n","for w in class_list:\n","    # print(w.split())\n","    cmp_emb = np.array([nlp(i) for i in w.split()]).mean(axis=0)\n","    # print(cmp_emb.shape)\n","    word_emb.append(cmp_emb)"],"metadata":{"id":"iQxmtJkcP1Cn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.array(word_emb).shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UOdSrfsdWTa1","executionInfo":{"status":"ok","timestamp":1678633432865,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"d9caa336-7bb7-4b1b-bcf1-994234097998"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(18, 300)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["word_dict = dict(zip(class_list, word_emb))\n","with open('W2V_300.pickle', 'wb') as handle:\n","    pickle.dump(word_dict, handle)"],"metadata":{"id":"zcDLSSiNPixh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!wget \"https://nlp.stanford.edu/data/glove.42B.300d.zip\" -c -O glove.42B.300d.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q-4bgw-0YfPt","executionInfo":{"status":"ok","timestamp":1678634407368,"user_tz":-330,"elapsed":334314,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"416142bd-901a-4298-a9c0-b1487453a0ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-03-12 15:14:33--  https://nlp.stanford.edu/data/glove.42B.300d.zip\n","Resolving nlp.stanford.edu (nlp.stanford.edu)... 171.64.67.140\n","Connecting to nlp.stanford.edu (nlp.stanford.edu)|171.64.67.140|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://downloads.cs.stanford.edu/nlp/data/glove.42B.300d.zip [following]\n","--2023-03-12 15:14:33--  https://downloads.cs.stanford.edu/nlp/data/glove.42B.300d.zip\n","Resolving downloads.cs.stanford.edu (downloads.cs.stanford.edu)... 171.64.64.22\n","Connecting to downloads.cs.stanford.edu (downloads.cs.stanford.edu)|171.64.64.22|:443... connected.\n","HTTP request sent, awaiting response... 206 Partial Content\n","Length: 1877800501 (1.7G), 1768015413 (1.6G) remaining [application/zip]\n","Saving to: ‘glove.42B.300d.zip’\n","\n","glove.42B.300d.zip  100%[+==================>]   1.75G  5.07MB/s    in 5m 32s  \n","\n","2023-03-12 15:20:07 (5.08 MB/s) - ‘glove.42B.300d.zip’ saved [1877800501/1877800501]\n","\n"]}]},{"cell_type":"code","source":["from gensim.models import KeyedVectors\n","# Load vectors directly from the file\n","model = KeyedVectors.load_word2vec_format('/content/glove.42B.300d.zip', binary=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"HUP5CFVrYZQL","executionInfo":{"status":"error","timestamp":1678634426362,"user_tz":-330,"elapsed":1106,"user":{"displayName":"Pathirage Nipun Deelaka","userId":"00264959805100472870"}},"outputId":"9fc9b293-d3b2-4c70-f2bc-69048db507e9"},"execution_count":null,"outputs":[{"output_type":"error","ename":"UnicodeDecodeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-36-fa769e8b6fe9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mKeyedVectors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# Load vectors directly from the file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKeyedVectors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload_word2vec_format\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/glove.42B.300d.zip'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbinary\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/gensim/models/keyedvectors.py\u001b[0m in \u001b[0;36mload_word2vec_format\u001b[0;34m(cls, fname, fvocab, binary, encoding, unicode_errors, limit, datatype)\u001b[0m\n\u001b[1;32m   1434\u001b[0m         \"\"\"\n\u001b[1;32m   1435\u001b[0m         \u001b[0;31m# from gensim.models.word2vec import load_word2vec_format\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1436\u001b[0;31m         return _load_word2vec_format(\n\u001b[0m\u001b[1;32m   1437\u001b[0m             \u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfvocab\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfvocab\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbinary\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbinary\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0municode_errors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0municode_errors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1438\u001b[0m             limit=limit, datatype=datatype)\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/gensim/models/utils_any2vec.py\u001b[0m in \u001b[0;36m_load_word2vec_format\u001b[0;34m(cls, fname, fvocab, binary, encoding, unicode_errors, limit, datatype)\u001b[0m\n\u001b[1;32m    170\u001b[0m     \u001b[0mlogger\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"loading projection weights from %s\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    171\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msmart_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfin\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 172\u001b[0;31m         \u001b[0mheader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_unicode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfin\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m         \u001b[0mvocab_size\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvector_size\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mheader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# throws for invalid file format\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlimit\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/gensim/utils.py\u001b[0m in \u001b[0;36many2unicode\u001b[0;34m(text, encoding, errors)\u001b[0m\n\u001b[1;32m    353\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0municode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mtext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 355\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0municode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    356\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    357\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'utf-8' codec can't decode byte 0x86 in position 11: invalid start byte"]}]},{"cell_type":"code","source":[],"metadata":{"id":"o41phCzbYZM3"},"execution_count":null,"outputs":[]}]}